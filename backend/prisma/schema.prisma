
generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// A service to be searched for. WIll be associated with a specific non-profits database.
model service{
  id                    Int     @id @default(autoincrement())
  name                  String  @unique
  address               String
  zipcode               Int?
  description           String?
  phone_number          String?
  email                 String?
  phone                 String?
  website               String
  hours                 String?
  logo                  String?
  language              String?
  date_needed           String?
  services_offered      String[]
  restrictions          String?
  next_steps            String
  nonprofit_ID          Int
  nonprofit             nonprofit @relation(fields: [nonprofit_ID], references: [id])
}

// The non profit associated with a certain database of services.
model nonprofit {
id                      Int       @id @default(autoincrement())
name                    String    @unique
phone                   String?
email                   String?
logo                    String?
services                service[]
employees               nonprofit_employee[]
refugees                refugee[]
refugee_logs            refugee_log[]
}

// Each employee from the non profit side who can manage  the services for their non profit.
model nonprofit_employee{
  id                    Int      @id @default(autoincrement())
  username              String   @unique
  password              String
  signin_info           String
  email                 String
  nonprofit_ID          Int
  nonprofit             nonprofit @relation(fields: [nonprofit_ID], references: [id])
}

// The refugee account so a refugee can sign in and out and save services.
model refugee{
  id                    Int     @id @default(autoincrement())
  username              String  @unique
  password              String
  signin_info           String
  email                 String
  address               String?
  nonprofit_ID          Int
  nonprofit             nonprofit @relation(fields: [nonprofit_ID], references: [id])
  logs                  refugee_log[]
  }


// A log object for a refugee user to keep track of important data.
model refugee_log{
  id                    Int     @id @default(autoincrement())
  type                  String
  data                  String
  date                  Int
  refugee               refugee @relation(fields: [refugee_ID], references: [id])
  refugee_ID            Int
  nonprofit_ID          Int
  nonprofit             nonprofit @relation(fields: [nonprofit_ID], references: [id])
}
